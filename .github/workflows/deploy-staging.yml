name: Deploy (staging)

on:
  push:
    branches: [main]

concurrency:
  group: deploy-staging-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Deploy to staging server
        env:
          DEPLOY_USER: ${{ secrets.STAGING_DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.STAGING_DEPLOY_HOST }}
          APP_DIR: ${{ secrets.STAGING_APP_DIR }} # set to /var/www/summit-care-staging in env secrets
          NODE_ENV: production
          PORT: 3001
          PM2_NAME: summitcare-staging
        run: |
          ssh -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" "
            set -e
            command -v pnpm >/dev/null 2>&1 || corepack enable || true
            mkdir -p \"$APP_DIR\"
            cd \"$APP_DIR\"
            if [ -d .git ]; then
              git fetch --all --prune
              git reset --hard origin/main
              git clean -fd
            else
              git clone https://github.com/${{ github.repository }} .
              git reset --hard origin/main
            fi
            pnpm install --frozen-lockfile || pnpm install
            pnpm approve-builds sharp unrs-resolver || true
            BASE_PATH=/summit-care-staging NODE_ENV=$NODE_ENV pnpm run build
            ( command -v pm2 >/dev/null 2>&1 && pm2 reload \"$PM2_NAME\" ) \
              || pnpm dlx pm2 reload \"$PM2_NAME\" \
              || pnpm dlx pm2 start 'pnpm -- run start' --name \"$PM2_NAME\" -- -p $PORT
          "
