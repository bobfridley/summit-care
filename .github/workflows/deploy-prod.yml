name: Deploy (production)

on:
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://srv1051247.hstgr.cloud/summit-care

    env:
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      APP_DIR: ${{ secrets.DEPLOY_APP_DIR }}
      NODE_ENV: production
      PORT: 3000
      PM2_NAME: summitcare

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Show loaded SSH keys (fingerprints only)
        run: ssh-add -l

      - name: Smoke test SSH connectivity
        run: |
          set -x
          ssh -vvv -o IdentitiesOnly=yes -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" "echo ok"

      - name: Show loaded SSH keys (fingerprints only)
        run: ssh-add -l

      - name: Smoke test SSH connectivity (no side effects)
        run: |
          set -x
          ssh -vvv -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" "echo ok"

      - name: Validate env
        run: |
          for v in DEPLOY_USER DEPLOY_HOST APP_DIR; do
            if [ -z "${!v}" ]; then echo "Missing $v"; exit 1; fi
          done

      - name: Deploy to production server
        run: |
          ssh -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" "
            set -e
            command -v pnpm >/dev/null 2>&1 || corepack enable || true
            mkdir -p \"$APP_DIR\"
            cd \"$APP_DIR\"
            if [ -d .git ]; then
              git fetch --all --prune
              git reset --hard origin/main
              git clean -fd
            else
              git clone https://github.com/${{ github.repository }} .
              git reset --hard origin/main
            fi
            pnpm install --frozen-lockfile || pnpm install
            pnpm approve-builds sharp unrs-resolver || true
            BASE_PATH=/summit-care NODE_ENV=$NODE_ENV pnpm run build
            ( command -v pm2 >/dev/null 2>&1 && pm2 reload \"$PM2_NAME\" ) \
              || pnpm dlx pm2 reload \"$PM2_NAME\" \
              || pnpm dlx pm2 start 'pnpm -- run start' --name \"$PM2_NAME\" -- -p $PORT
          "
