name: Tests

on:
  push:
    branches: [main, master, develop]
  pull_request:

concurrency:
  group: tests-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    name: Unit Tests (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install deps
        run: pnpm install --frozen-lockfile

      # Optional: build if your tests import built code
      # - name: Build
      #   run: pnpm run build

      - name: Run tests (Vitest or Jest)
        shell: bash
        run: |
          set -e
          if pnpm exec vitest --version >/dev/null 2>&1; then
            echo "Detected Vitest"
            pnpm exec vitest run --reporter=dot --coverage
          elif pnpm exec jest --version >/dev/null 2>&1; then
            echo "Detected Jest"
            # Try coverage; drop --coverage if you don't collect it
            pnpm exec jest --ci --runInBand --coverage
          else
            echo "No Vitest or Jest found. Add one to devDependencies." >&2
            exit 1
          fi

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node }}
          path: |
            coverage/**
            .nyc_output/**
            coverage-final.json
          if-no-files-found: ignore

      # Optional: Codecov (uncomment if you use it and set CODECOV_TOKEN in repo secrets)
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     fail_ci_if_error: true
