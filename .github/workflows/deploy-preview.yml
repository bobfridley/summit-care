name: Deploy (preview PR)

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

concurrency:
  group: preview-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  preview:
    runs-on: ubuntu-latest
    if: github.event.action != 'closed'
    environment: preview

    env:
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }} # e.g. "deploy"
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }} # e.g. "srv1051247.hstgr.cloud"
      PREVIEWS_ROOT: /var/www/summit-care-previews
      NODE_ENV: production
      REPO: ${{ github.repository }}
      PR: ${{ github.event.pull_request.number }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Validate env
        run: |
          for v in DEPLOY_USER DEPLOY_HOST PREVIEWS_ROOT PR; do
            if [ -z "${!v}" ]; then echo "Missing $v"; exit 1; fi
          done

      # ðŸ‘‡ Added: make host known so we can enable strict checking
      - name: Add host to known_hosts
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H "$DEPLOY_HOST" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      # ðŸ‘‡ Added: verbose smoke test (kept non-fatal with `|| true`)
      - name: Smoke test SSH (verbose)
        run: |
          ssh -vvv -o IdentitiesOnly=yes "$DEPLOY_USER@$DEPLOY_HOST" "echo ok" || true

      - name: Deploy PR preview
        id: deploy
        run: |
          ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" "
            set -e
            command -v pnpm >/dev/null 2>&1 || corepack enable || true

            APP_DIR=\"$PREVIEWS_ROOT/pr-$PR\"
            PORT=\$((31000 + $PR))                   # e.g. PR 123 -> 31123
            PM2_NAME=\"summitcare-pr-$PR\"
            BASE=\"/summit-care-pr-$PR\"

            mkdir -p \"\$APP_DIR\"
            if [ -d \"\$APP_DIR/.git\" ]; then
              cd \"\$APP_DIR\"
              git remote set-url origin https://github.com/$REPO || true
              git fetch origin \"pull/$PR/head:pr-$PR\" --update-head-ok
              git checkout -B pr-$PR
              git reset --hard pr-$PR
              git clean -fd
            else
              git clone https://github.com/$REPO \"\$APP_DIR\"
              cd \"\$APP_DIR\"
              git fetch origin \"pull/$PR/head:pr-$PR\"
              git checkout pr-$PR
            fi

            pnpm install --frozen-lockfile || pnpm install
            pnpm approve-builds sharp unrs-resolver || true

            BASE_PATH=\"\$BASE\" NODE_ENV=$NODE_ENV pnpm run build

            ( command -v pm2 >/dev/null 2>&1 && pm2 reload \"\$PM2_NAME\" ) \
              || pnpm dlx pm2 reload \"\$PM2_NAME\" \
              || pnpm dlx pm2 start 'pnpm -- run start' --name \"\$PM2_NAME\" -- -p \"\$PORT\"

            pnpm dlx pm2 save || true
          "

          echo "url=https://${{ env.DEPLOY_HOST }}/summit-care-pr-${{ env.PR }}/" >> "$GITHUB_OUTPUT"

      - name: Post or update PR comment with preview URL
        if: success()
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.PR }}
          body: |
            âœ… **Preview deployed!**
            ðŸ”— [View preview here](${{ steps.deploy.outputs.url }})
            _(Updated automatically whenever you push to this PR)_

  teardown:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    environment: preview

    env:
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      PREVIEWS_ROOT: /var/www/summit-care-previews
      PR: ${{ github.event.pull_request.number }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Remove PR preview
        run: |
          ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no "$DEPLOY_USER@$DEPLOY_HOST" "
            set -e
            APP_DIR=\"$PREVIEWS_ROOT/pr-$PR\"
            PM2_NAME=\"summitcare-pr-$PR\"
            pnpm dlx pm2 delete \"\$PM2_NAME\" || true
            rm -rf \"\$APP_DIR\"
          "

      - name: Remove preview comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            const target = comments.data.find(c => c.body.includes('Preview deployed!'));
            if (target) {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: target.id
              });
            }
